1. Write a Java program to display information about the database and list all the tables in the 
database. (Use DatabaseMetaData). [15 M] 
import java.sql.*; 
public class S13Q1 { 
 public static void main(String args[]) { 
 try { 
 Class.forName("org.postgresql.Driver"); 
 Connection con = 
DriverManager.getConnection("jdbc:postgresql://localhost:5432/ty92","ty92","ty
92"); 
 DatabaseMetaData dbmd = con.getMetaData(); 
 System.out.println("\nDatabase Product Name: " + 
dbmd.getDatabaseProductName()); 
 System.out.println("Database Product Version: " + 
dbmd.getDatabaseProductVersion()); 
 System.out.println("Driver Name: " + dbmd.getDriverName()); 
 System.out.println("Driver Version: " + dbmd.getDriverVersion()); 
 System.out.println("\n- Tables in the Database -\n"); 
 ResultSet rs = dbmd.getTables(null,null,null,new 
String[]{"TABLE"}); 
 while(rs.next()) 
 System.out.println(rs.getString("TABLE_NAME")); 
 rs.close(); 
 con.close(); 
 } catch (SQLException | ClassNotFoundException e) { 
 System.out.println(e); 
 } 
 } 
}
2. Write a Java program to show lifecycle (creation, sleep, and dead) of a thread. Program should 
print randomly the name of thread and value of sleep time. The name of the thread should be 
hard coded through constructor. The sleep time of a thread will be a random integer in the 
range 0 to 4999.
import java.util.Random; 
public class S13Q2 { 
 public static void main(String args[]) { 
 Thread thread = new CustomThread("CustomThread"); 
 thread.start(); 
 } 
 static class CustomThread extends Thread { 
 public CustomThread(String name) { 
 super(name); 
 } 
 public void run() { 
 System.out.println(getName() + " is created."); 
 Random random = new Random(); 
 int sleepTime = random.nextInt(5000); 
 System.out.println(getName() + " will sleep for " + sleepTime + " 
milliseconds."); 
 try { 
 Thread.sleep(sleepTime); 
 } catch (InterruptedException e) { 
 System.out.println(e); 
 } 
 System.out.println(getName() + " is dead."); 
 } 
 } 
}
